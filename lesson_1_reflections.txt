How did viewing a diff between two versions of a file help you see the bug that
was introduced?
	By using the command fc in my windows os, it really made it easy for
me to spot the different words and the respective line numbers.

How could having easy access to the entire history of a file make you a more 
efficient programmer in the long term?
	By having a history of edits made by me in a particular program, it
gets convenient for me to track the changes and also if i wish to restore 
any changes,  i can do it in much lesser time as compared to the manual approach.

What are the pros and cons of manual committing?
	I pefer manual committing as then it depends on the programmer completely to 
deicde the amount of time it takes to make a logical change in program. So this is an 
advantage. Whereas one disadvantage can be that programmer has to make sure he
doesnt forget committing. But this is not a big issue, here i feel advantage clearly
outweighs the disadvantage. 

Why git allows commit for multiple files whereas other systems like docs aloows only
for single file?
	This is because git is programming oriented as sometimes multiple files share
a common element of a program.

How using version control might make you confident about making changes that can break the 
program?
	Basically, if i have older versions saved i can make changes accordingly 
without any reservations.